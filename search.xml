<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>复盘：大文件下载</title>
      <link href="/2023/09/23/%E5%A4%8D%E7%9B%98%EF%BC%9A%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/"/>
      <url>/2023/09/23/%E5%A4%8D%E7%9B%98%EF%BC%9A%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD/</url>
      
        <content type="html"><![CDATA[<h3 id="业务说明"><a href="#业务说明" class="headerlink" title="业务说明"></a>业务说明</h3><p>​    有一套邮件系统，用户需要下载附件，附件总大小最多5G，附件数量限制最多5个，原有的解决方案是当客户点击下载单个附件时，前端会发起AJAX请求去后端，后端是PHP，然后PHP调JAVA，JAVA再去调C++，C++去数据库获取数据后把数据放在临时文件目录，接着通知JAVA，JAVA最后再返回给PHP，PHP拿到信息后，再与前端交互文件信息。</p><p>​    上述解决方案遇到的问题：</p><ol><li>调用关系链太长，任何一环都不能出问题，出问题下载就会失败；</li><li>如果一个客户下载多个附件，或者下载文件过大时，或者多次点击下载按钮，会出现前端卡死、无反应等现象；</li><li>文件下载下来为空白</li></ol><p>注释：该业务需求是本人真实遇到的业务场景，并进行了一定程序的修饰，请不要考虑业务是否合理，领导规定就是这样，程序员需要在领导的规定下完成业务即可，没有商量余地。</p><h3 id="业务思考"><a href="#业务思考" class="headerlink" title="业务思考"></a>业务思考</h3><p>为了更好的完成大文件下载这个任务，我能想到的如下：</p><ol><li>在客户点击特定附件下载后，该特定附件下载按钮应置灰，不可以再重复点击下载，如果点击，前端需要提示文件正在准备中，请耐心等待；</li><li>当新邮件到达时，前端发起请求，缓存附件到磁盘(如果缓存到内存的话，大文件会占用大量内存，不可取)，跟Mysql数据库操作类似，尽量在内存中操作数据；</li><li>后端使用Nginx做静态代理，进行大文件的下载，并设置零拷贝以及异步下载</li></ol><h3 id="实验"><a href="#实验" class="headerlink" title="实验"></a>实验</h3><ul><li><p>使用Nginx做静态代理进行大文件的下载，并设置零拷贝</p></li><li><p>Nginx：1.18.0</p></li><li><p>Python：3.8.10</p></li><li><p>uWSGI：2.0.22</p></li><li><p>Flask：2.3.3</p></li></ul><p>Flask 代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#coding:utf-8</span></span><br><span class="line">  </span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> make_response</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;welcome to flask hello world&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/get-big-file&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_big_file</span>():</span><br><span class="line">    rsp = make_response()</span><br><span class="line">    rsp.headers[<span class="string">&quot;X-Accel-Redirect&quot;</span>] = <span class="string">&quot;/private_file/bigfile.targz&quot;</span></span><br><span class="line">    rsp.headers[<span class="string">&quot;Content-disposition&quot;</span>] = <span class="string">&quot;attachment; filename=bigfile.targz&quot;</span></span><br><span class="line">    <span class="keyword">return</span> rsp</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>uWSGI配置文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[uwsgi]</span><br><span class="line">http = 127.0.0.1:5000</span><br><span class="line">wsgi-file = app.py</span><br><span class="line">callable = app</span><br></pre></td></tr></table></figure><p>Nginx配置文件</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span> &#123;</span><br><span class="line">  </span><br><span class="line">        <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span> <span class="number">138.128.220.182</span>;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> /private_file/ &#123;</span><br><span class="line">                internal;</span><br><span class="line">                <span class="attribute">alias</span> /root/bigfilewdonload/;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="section">location</span> / &#123;</span><br><span class="line">                <span class="attribute">proxy_pass</span> http://127.0.0.1:5000;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">user</span> root;</span><br><span class="line"><span class="attribute">worker_processes</span> auto;</span><br><span class="line"><span class="attribute">pid</span> /run/nginx.pid;</span><br><span class="line"><span class="attribute">include</span> /etc/nginx/modules-enabled/<span class="regexp">*.conf</span>;</span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line"><span class="attribute">use</span> <span class="literal">epoll</span>;</span><br><span class="line"><span class="attribute">worker_connections</span> <span class="number">768</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Basic Settings</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">sendfile</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">tcp_nopush</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">tcp_nodelay</span> <span class="literal">on</span>;</span><br><span class="line"><span class="attribute">keepalive_timeout</span> <span class="number">65</span>;</span><br><span class="line"><span class="attribute">types_hash_max_size</span> <span class="number">2048</span>;</span><br><span class="line"></span><br><span class="line"><span class="attribute">include</span> /etc/nginx/mime.types;</span><br><span class="line"><span class="attribute">default_type</span> application/octet-stream;</span><br><span class="line"></span><br><span class="line"><span class="comment"># SSL Settings</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">ssl_protocols</span> TLSv1 TLSv1.<span class="number">1</span> TLSv1.<span class="number">2</span> TLSv1.<span class="number">3</span>; <span class="comment"># Dropping SSLv3, ref: POODLE</span></span><br><span class="line"><span class="attribute">ssl_prefer_server_ciphers</span> <span class="literal">on</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Logging Settings</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">access_log</span> /var/log/nginx/access.log;</span><br><span class="line"><span class="attribute">error_log</span> /var/log/nginx/<span class="literal">error</span>.log;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Gzip Settings</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">gzip</span> <span class="literal">on</span>;  <span class="comment">#开启senfile后，用户数据直接在内核空间操作，不需要再用户空间操作，可用gzip_static办法解决</span></span><br><span class="line"></span><br><span class="line"><span class="attribute">include</span> /etc/nginx/conf.d/<span class="regexp">*.conf</span>;</span><br><span class="line"><span class="attribute">include</span> /etc/nginx/sites-enabled/*;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ul><li><h4 id="技术总结"><a href="#技术总结" class="headerlink" title="技术总结"></a>技术总结</h4><ul><li>经过上面代码测试，确实可成功实现后端flask下载大文件转为向Nginx下载大文件，uwsgi是实现了WSGI协议，flask可用于身份认证，最后把文件下载的任务重定向到了Nginx，Nginx对静态文件处理能力非常优秀，理由如下：<ul><li>Nginx 使用的是Reactor模型，启动后会有一个master进程，多个work进程，master进程只监听socket，work用于处理通讯的socket，分工合作</li><li>Nginx 的work进程用的是epoll模型，一个work可处理多个通讯的socket，不再使用以前的多进程或者多线程模型，节约了计算资源</li><li>Nginx使用了零拷贝技术，默认开启sendfile，该系统调用函数可以在发送数据时，不经过用户态，直接从内核拷贝到发送socket的缓冲区，节省了在用户空间操作的时间(注意：sendfile和gzip是冲突的，gzip工作在用户空间，但senfile没有用户空间的操作，需要获取文件时就已经是压缩好了的)</li></ul></li><li>使用Nginx内部重定向internal，对用户隐藏了真实文件地址，减轻了后端uwsgi的压力</li></ul></li><li><h4 id="业务总结"><a href="#业务总结" class="headerlink" title="业务总结"></a>业务总结</h4><ul><li>我认为现在的程序员不再是一个开发代码，而是进行方案整合，因为现在IT市场上优秀的解决方案太多了，很多方案并不需要我们再去重新造轮子，我们只需要拿过来用即可是，用市面上最优秀的最符合业务要求最稳定的方案即可</li><li>即使要造轮子，我并不认为使用flask进行下载的bug会比使用Nginx代理静态文件的bug要少</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 复盘 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大文件下载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello, Welcome to Baron World</title>
      <link href="/2023/09/10/hello-world/"/>
      <url>/2023/09/10/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://baronblog.github.io/">Baron World</a>! This is my first post.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><h3 id="Clean-local-cache"><a href="#Clean-local-cache" class="headerlink" title="Clean local cache"></a>Clean local cache</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> helloworld </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
